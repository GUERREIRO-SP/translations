from django.test import TestCase
import time

# Create your tests here.

# integers_list =  [1, 1, 2 ,3 ,1 ,2 ,3 ,4]
# digits_list = [1, 3]

# integers_list = [-18, -31, 81, -19, 111, -888]
# digits_list = [1, 8, 4]


def calcula_list(onde_busca: list, procurado: list) -> list:
    dic_num: dict = {}      # {"0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0}
    lst_retorno: list = []
    tpl_dados: tuple = ()
    char: str

    print(f"ONDE : {onde_busca}")
    print(f"BUSCA: {procurado}")

    for char in str(procurado):
        if char.isnumeric():
            qtd = str(onde_busca).count(char)
            # print(f"QTD: {qtd}")
            dic_num[char] = qtd

            tpl_dados = int(char), qtd 
            lst_retorno.append(tpl_dados)

    print(f"DADOS  : {dic_num}")
    print(f"RETORNO: {lst_retorno}")

    return lst_retorno


     
class List(object):
    def count_spec_digits(self, integers_list, digits_list):
        lst_retorno: list = []
        
        lst_retorno = calcula_list(integers_list, digits_list)

        return lst_retorno      



l = List()
# integers_list =  [1, 1, 2 ,3 ,1 ,2 ,3 ,4]
# digits_list = [1, 3]
integers_list = [-18, -31, 81, -19, 111, -888]
digits_list = [1, 8, 4, 9]

# integers_list = [-77, -65, 56, -79, 6666, 222]
# digits_list = [1, 8, 4]

t1 = time.time()

# print(l.count_spec_digits(integers_list, digits_list),[(1, 7), (8, 5), (4, 0)])

# print(l.count_spec_digits(integers_list, digits_list))
l.count_spec_digits(integers_list, digits_list)

tempoExec = time.time() - t1
print("Tempo de execução: {} segundos".format(tempoExec))

